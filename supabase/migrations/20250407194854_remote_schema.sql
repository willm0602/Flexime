create table "public"."resume" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" uuid,
    "contents" jsonb
);


alter table "public"."resume" enable row level security;

CREATE UNIQUE INDEX resume_pkey ON public.resume USING btree (id);

alter table "public"."resume" add constraint "resume_pkey" PRIMARY KEY using index "resume_pkey";

alter table "public"."resume" add constraint "resume_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."resume" validate constraint "resume_user_id_fkey";

grant delete on table "public"."resume" to "anon";

grant insert on table "public"."resume" to "anon";

grant references on table "public"."resume" to "anon";

grant select on table "public"."resume" to "anon";

grant trigger on table "public"."resume" to "anon";

grant truncate on table "public"."resume" to "anon";

grant update on table "public"."resume" to "anon";

grant delete on table "public"."resume" to "authenticated";

grant insert on table "public"."resume" to "authenticated";

grant references on table "public"."resume" to "authenticated";

grant select on table "public"."resume" to "authenticated";

grant trigger on table "public"."resume" to "authenticated";

grant truncate on table "public"."resume" to "authenticated";

grant update on table "public"."resume" to "authenticated";

grant delete on table "public"."resume" to "service_role";

grant insert on table "public"."resume" to "service_role";

grant references on table "public"."resume" to "service_role";

grant select on table "public"."resume" to "service_role";

grant trigger on table "public"."resume" to "service_role";

grant truncate on table "public"."resume" to "service_role";

grant update on table "public"."resume" to "service_role";


