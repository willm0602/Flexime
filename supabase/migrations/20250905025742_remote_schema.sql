revoke delete on table "public"."configuration" from "anon";

revoke insert on table "public"."configuration" from "anon";

revoke references on table "public"."configuration" from "anon";

revoke select on table "public"."configuration" from "anon";

revoke trigger on table "public"."configuration" from "anon";

revoke truncate on table "public"."configuration" from "anon";

revoke update on table "public"."configuration" from "anon";

revoke references on table "public"."configuration" from "authenticated";

revoke trigger on table "public"."configuration" from "authenticated";

revoke truncate on table "public"."configuration" from "authenticated";

alter table "public"."resume" drop constraint "resume_user_id_fkey";

alter table "public"."configuration" alter column "id" set generated by default;

alter table "public"."configuration" enable row level security;

alter table "public"."resume" alter column "id" set generated by default;

alter table "public"."resume" enable row level security;

alter table "public"."userprofile" alter column "id" set generated by default;

alter table "public"."userprofile" enable row level security;

alter table "public"."resume" add constraint "resume_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."resume" validate constraint "resume_user_id_fkey";

grant delete on table "public"."configuration" to "prisma";

grant insert on table "public"."configuration" to "prisma";

grant references on table "public"."configuration" to "prisma";

grant select on table "public"."configuration" to "prisma";

grant trigger on table "public"."configuration" to "prisma";

grant truncate on table "public"."configuration" to "prisma";

grant update on table "public"."configuration" to "prisma";

grant delete on table "public"."resume" to "prisma";

grant insert on table "public"."resume" to "prisma";

grant references on table "public"."resume" to "prisma";

grant select on table "public"."resume" to "prisma";

grant trigger on table "public"."resume" to "prisma";

grant truncate on table "public"."resume" to "prisma";

grant update on table "public"."resume" to "prisma";

grant delete on table "public"."userprofile" to "prisma";

grant insert on table "public"."userprofile" to "prisma";

grant references on table "public"."userprofile" to "prisma";

grant select on table "public"."userprofile" to "prisma";

grant trigger on table "public"."userprofile" to "prisma";

grant truncate on table "public"."userprofile" to "prisma";

grant update on table "public"."userprofile" to "prisma";

create policy "Users can delete their own configurations"
on "public"."configuration"
as permissive
for delete
to public
using ((auth.uid() = user_id));


create policy "Users can insert their own configurations"
on "public"."configuration"
as permissive
for insert
to public
with check ((auth.uid() = user_id));


create policy "Users can read their own configurations"
on "public"."configuration"
as permissive
for select
to public
using ((auth.uid() = user_id));


create policy "Users can update their own configurations"
on "public"."configuration"
as permissive
for update
to public
using ((auth.uid() = user_id));


create policy "Allow any user to create a userprofile"
on "public"."userprofile"
as permissive
for insert
to public
with check (true);


create policy "Allow authenticated users to create a userprofile"
on "public"."userprofile"
as permissive
for insert
to public
with check ((user_id = auth.uid()));


create policy "Allow users to update their userprofile"
on "public"."userprofile"
as permissive
for update
to public
using ((user_id = auth.uid()));


create policy "Allow users to view their userprofile"
on "public"."userprofile"
as permissive
for select
to public
using ((user_id = auth.uid()));



